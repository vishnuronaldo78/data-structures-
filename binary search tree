#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>
#include<string.h>

struct list {
  char name[100];
  struct list *next;
};

struct node {
  int value;
  struct node *left, *right;
  struct list *head, *tail;
};

struct node *root;

void add(int value, char *name)
{
  struct node *node,*temp, *prev;
  
  struct list *newlist;
  
  node=(struct node *)malloc(sizeof(struct node));
  node->value= value;
  node->left=node->right=NULL;
  node->head = node->tail=NULL;
  
  if(!root)
  {
    root=node;
    newlist = (struct list *)malloc (sizeof(struct list));
    strcpy(newlist->name,name);
    
    if(node->head==NULL)
    {
      node->head = newlist;
      node->tail = newlist;
    }
    else
    {
      node->tail->next = newlist;
      node->tail = newlist;
    }
    return;
  }
  else
  {
    temp=root;
    prev=root;
    while(temp!=NULL)
    {
      prev=temp;
      if(value> temp->value)
      temp= temp->right;
      else if(value < temp->value)
      temp=temp->left;
      else
      {
        printf("node %d already exits", value);
        newlist = (struct list *)malloc (sizeof(struct list));
        newlist->next=NULL;
        strcpy(newlist->name,name);
    
        if(node->head==NULL)
       {
          node->head = newlist;
          node->tail = newlist;
        }
        else
        {
            printf("\ncame here for adding %s",name);
           node->tail->next = newlist;
           node->tail = newlist;
         }
       return;
      }
    }
     newlist = (struct list *)malloc (sizeof(struct list));
        
        strcpy(newlist->name,name);
    
        if(node->head==NULL)
       {
          node->head = newlist;
          node->tail = newlist;
        }
        else
        {
            printf("\ncame here for adding %s",name);
           node->tail->next = newlist;
           node->tail = newlist;
         }
    if(value>prev->value)
    {
      prev->right=node;
    }
    else
    {
      prev->left=node;
    }
    return;


}

void display()
{
  struct list *temp;
  if(node==NULL)
  return;
  
  display(node->left);
  printf("Value of node: %d",node->value);
  temp=node->head;
  while(temp!=NULL)
  {
    puts(temp->name);
    temp=temp->next;
  }
  display(node->right);
  
}
int main() {

  add(3,"dh");
  add(4,"jfh");
  add(4,"fjs");
  display(root);
  //return;
}
